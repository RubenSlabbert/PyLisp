(import math)
(import io)

(library (hello)
         (export hello-world)
         (define hello-world "Hello World!"))

(import hello)
(define test-list (list (= hello-world "Hello World!")))

(library (gcd-math)
         (export gcd)
         (export fac)

         (define (gcd x y)
           (let ((n (max (list x y)))
                 (m (min (list x y))))
             (if (= 0 (modulo n m))
               m
               (gcd m (modulo n m)))))

         (define (fac n) (if (= n 0) 1 (* n (fac (- n 1))))))

(import gcd-math)

(set! test-list (append test-list (list 
                                    (= 120 (fac 5))
                                    (= 6 (gcd 12 6))
                                    (= 8 (gcd 1008 5624))
                                    )))

(display (not (elem? #f test-list)))
(newline)
